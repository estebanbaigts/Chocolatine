name: chocolatine

on:
  push:
    branches-ignore:
    - "ga-ignore-*"
  pull_request:
    branches-ignore:
    - "ga-ignore-*"

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-DOP-200-BDX-2-1-chocolatine-esteban.baigts.git"
  EXECUTABLES: "chocolatine"

jobs:
  check_coding_style:
    name: "Checks if the coding style is correct"
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
      - id: check_coding_style
        run: |
          if [[ $(./coding_style_checker.sh) ]]
          then
            echo "::error file=README.md,title=Coding style is not correct::"
            exit 1
          else
            echo Coding style is correct
          fi

  check_repo:
    name: "Checks if the repo is clean"
    runs-on: ubuntu-latest
    needs : [check_coding_style]
    steps:
      - uses: actions/checkout@v3
      - id: check_repo
        run: |
          if [[ $(git status --porcelain) ]]
          then
            echo "::error file=README.md,title=Repo is not clean::"
            exit 1
          else
            echo Repo is clean
          fi

  check_program_compilation:
    needs: [check_coding_style, check_repo]
    name: "Checks if the program compiles"
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
      - id: check_program_compilation
        run: make
        timeout-minutes: 2
      - run: make clean
      - run: |
          OIFS=$IFS
          IFS=','
          for x in $EXECUTABLES
            do
              ./$x $ARGUMENTS
            done
          IFS=$OIFS
  
  run_tests:
    needs: [check_coding_style, check_repo, check_program_compilation]
    name: "Runs the tests"
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
      - id: run_tests
        run: make tests_run
        timeout-minutes: 2